# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type MainCategory {
  id: String!
  name: String!
}

type User {
  id: String!
  email: String!
  nickName: String!
  phoneNumber: String
  point: Int!
  url: String!
  mainCategory: MainCategory!
}

type PointTransaction {
  id: String!
  impUid: String!
  amount: Int!
}

type PointHistory {
  id: String!
  changed: Int!
  status: POINT_TRANSACTION_STATUS_ENUM!
  pointId: PointTransaction!
  mainCategory: MainCategory!
}

enum POINT_TRANSACTION_STATUS_ENUM {
  CHARGE
  PAYMENT
  EARN
  CANCEL
}

type Schedule {
  id: String!
  title: String!
  location: String!
  startDate: String!
  endDate: String!
  isShare: String!
  numberPeople: NUMBER_PEOPLE_ENUM
  hashtag: HASHTAG!
  user: User!
  mainCategory: MainCategory!
  createAt: DateTime!
}

enum NUMBER_PEOPLE_ENUM {
  ONE
  TWO
  THREE
  FOUR
  GROUP
}

enum HASHTAG {
  ALONE
  FRIEND
  FAMILY
  COUPLE
  PET
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Board {
  id: String!
  day: String!
  content: String!
  schedule: Schedule!
}

type Budget {
  id: String!
  amount: Int!
  totalAmount: Int!
  mainCategory: MainCategory!
}

type BannerImage {
  id: String!
  url: String
  isImage: Boolean
  schedule: Schedule!
}

type MoneyBook {
  id: String!
  date: String!
  status: SPENDING_CATEGORY_STATUS_ENUM!
  time: String!
  context: String!
  memo: String!
  amount: Int!
}

enum SPENDING_CATEGORY_STATUS_ENUM {
  FOOD
  SHOPPING
  TRANSPORTATION
  TOURISM
  STAY
  ETC
}

type DetailSchedule {
  id: String!
  day: String!
  date: String!
  startTime: String!
  useTime: String!
  place: String!
  memo: String
  schedule: Schedule!
}

type Query {
  fetchUser: User!
  fetchBudget(scheduleId: String!): [Budget!]!
  fetchPointHistory: [PointHistory!]!
  fetchSchedules(page: Float = 1): [Schedule!]!
  fetchMoneyBook(date: String!, budgetId: String!): [MoneyBook!]!
  fetchDetailSchedules(scheduleId: String!, userId: String!): [DetailSchedule!]!
  fetchDetailSchedule(scheduleId: String!, userId: String!, day: String!): [DetailSchedule!]!
  fetchBoard(scheduleId: String!): [Board!]!
  fetchShareSchedules(page: Float = 1): [Schedule!]!
  fetchSearch(search: String!): [Schedule!]!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  deleteUser(userEmail: String!): Boolean!
  login(email: String!, password: String!): String!
  restoreAccessToken: String!
  logout: String!
  createBudget(totalAmount: Float!, scheduleId: String!): Budget!
  updateBudget(totalAmount: Float!, scheduleId: String!): Budget!
  createPointTransaction(impUid: String!, amount: Float!): PointTransaction!
  cancelPointTransaction(impUid: String!): PointTransaction!
  paymentPointTransaction(userId: String!, point: Float!): PointTransaction!
  uploadBannerImage(file: Upload!): String!
  updateBannerImage(scheduleId: String!, url: String!): BannerImage!
  createSchedule(createScheduleInput: CreateScheduleInput!): Schedule!
  share(scheduleId: String!): Schedule!
  unshare(scheduleId: String!): Schedule!
  createMoneyBook(createMoneyBookInput: CreateMoneyBookInput!, budgetId: String!, amount: Float!): MoneyBook!
  updateMoneyBook(budgetId: String!, moneyBookId: String!, updateMoneyBookInput: UpdateMoneyBookInput!): MoneyBook!
  createDetailSchedule(createDetailScheduleInput: CreateDetailScheduleInput!, scheduleId: String!): DetailSchedule!
  updateDetailSchedule(updateDetailScheduleInput: UpdateDetailScheduleInput!, detailScheduleId: String!): DetailSchedule!
  deleteDetailSchedule(detailScheduleId: String!): Boolean!
  createBoard(createBoardInput: CreateBoardInput!, scheduleId: String!): Board!
  updateBoard(updateBoardInput: UpdateBoardInput!, boardId: String!): Board!
  deleteBoard(scheduleId: String!): Boolean!
}

input CreateUserInput {
  nickName: String!
  email: String!
  password: String!
  mainCategoryId: String!
}

input UpdateUserInput {
  nickName: String
  phoneNumber: String
  email: String
  password: String
  url: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreateScheduleInput {
  title: String!
  location: String!
  startDate: String!
  endDate: String!
  numberPeople: NUMBER_PEOPLE_ENUM
  hashtag: HASHTAG!
  mainCategoryId: String!
}

input CreateMoneyBookInput {
  date: String!
  status: SPENDING_CATEGORY_STATUS_ENUM!
  time: String!
  context: String!
  memo: String!
}

input UpdateMoneyBookInput {
  date: String!
  status: SPENDING_CATEGORY_STATUS_ENUM!
  amount: Int!
  time: String!
  context: String!
  memo: String!
}

input CreateDetailScheduleInput {
  day: String!
  date: String!
  startTime: String!
  useTime: String!
  place: String!
  memo: String
}

input UpdateDetailScheduleInput {
  date: String!
  useTime: String!
  place: String!
  memo: String
}

input CreateBoardInput {
  day: String!
  content: String!
}

input UpdateBoardInput {
  content: String!
}